# More info at https://github.com/pi-hole/docker-pi-hole/ and https://docs.pi-hole.net/
services:
  pihole:
    container_name: pihole
    image: pihole/pihole:latest
    # For DHCP it is recommended to remove these ports and instead add: network_mode: "host"
    ports:
      - "53:53/tcp"
      - "53:53/udp"
      - "67:67/udp" # Only required if you are using Pi-hole as your DHCP server
      - "8585:80/tcp"
    environment:
      TZ: 'America/Chicago'
      WEBPASSWORD: 'root1234'
    # Volumes store your data between container upgrades
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=frontend"
      - "traefik.http.services.pihole.loadbalancer.server.port=80"
      - "traefik.http.routers.pihole.entrypoints=web"
#     - "traefik.http.routers.pihole.rule=Host(`local.home-media.cloud`) && PathPrefix(`/pihole`)"
      - "traefik.http.routers.pihole.rule=Host(`pihole.home-media.cloud`)"    
      - "traefik.http.middlewares.go-to-admin.redirectregex.regex=^http:\\/\\/([^\\/]+)\\/?$$"
      - "traefik.http.middlewares.go-to-admin.redirectregex.replacement=http://$$1/admin/index.php"
      - "traefik.http.routers.pihole.middlewares=go-to-admin"      

      - "traefik.http.routers.pihole-https.tls=true"
      - "traefik.http.routers.pihole-https.tls.certresolver=cloudflare"

      - "traefik.http.routers.pihole-https.entrypoints=websecure"
      - "traefik.http.routers.pihole-https.rule=Host(`pihole.home-media.cloud`)"
      - "traefik.http.middlewares.pihole-https-go-to-admin.redirectregex.regex=^https:\\/\\/([^\\/]+)\\/?$$"
      - "traefik.http.middlewares.pihole-https-go-to-admin.redirectregex.replacement=https://$$1/admin/index.php" 
      - "traefik.http.routers.pihole-https.middlewares=pihole-https-go-to-admin"          
    volumes:
      - './etc-pihole:/etc/pihole'
      - './etc-dnsmasq.d:/etc/dnsmasq.d'
    #   https://github.com/pi-hole/docker-pi-hole#note-on-capabilities
    cap_add:
      - NET_ADMIN # Required if you are using Pi-hole as your DHCP server, else not needed
    restart: unless-stopped
    networks:
       arrs:
         ipv4_address: "172.23.0.3"
       backend-monitoring:
       frontend:

networks:
  frontend:
    external: true
  backend-monitoring:
    external: true
  arrs:
    external: true

